<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 The Netty Project
  ~
  ~ The Netty Project licenses this file to you under the Apache License,
  ~ version 2.0 (the "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at:
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

<!--   <parent>
    <groupId>io.netty</groupId>
    <artifactId>netty-parent</artifactId>
    <version>4.1.30.Final-SNAPSHOT</version>
  </parent> -->

  <groupId>io.netty</groupId>
  <artifactId>netty-example</artifactId>
  <version>4.1.30.Final-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Netty/Example</name>

  <dependencies>
	<dependency>
		<groupId>io.netty</groupId>
		<artifactId>netty-all</artifactId>
		<version>4.1.29.Final</version>
	</dependency>  
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>2.6.1</version>
      </dependency>	
      <dependency>
        <groupId>com.barchart.udt</groupId>
        <artifactId>barchart-udt-bundle</artifactId>
        <version>2.3.0</version>
      </dependency> 
      <!--
        Bouncy Castle - completely optional, only needed when:
        - you generate a temporary self-signed certificate using SelfSignedCertificate, and
        - you don't use the JDK which doesn't provide sun.security.x509 package.
      -->
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk15on</artifactId>
        <version>1.54</version>
        <scope>compile</scope>
        <optional>true</optional>
      </dependency>

      <!-- 
        Completely optional and only needed for OCSP stapling to construct and
        parse OCSP requests and responses.
      -->
      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>1.54</version>
        <scope>compile</scope>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.21</version>
      </dependency>
       <dependency>
        <groupId>org.eclipse.jetty.npn</groupId>
        <artifactId>npn-api</artifactId>
        <version>1.1.1.v20141010</version>
        <scope>provided</scope> <!-- Provided by npn-boot -->
      </dependency>
      <dependency>
        <groupId>com.jcraft</groupId>
        <artifactId>jzlib</artifactId>
        <version>1.1.3</version>
        <scope>runtime</scope>
      </dependency>
    <!-- Enable Javassist support for all test runs -->
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <version>3.20.0-GA</version>
      <scope>runtime</scope>
    </dependency>
      <dependency>
        <groupId>com.yammer.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>2.2.0</version>
      </dependency>
              <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.7</version>
      <scope>runtime</scope>
    </dependency>
      <dependency>
        <groupId>com.sun.activation</groupId>
        <artifactId>javax.activation</artifactId>
        <version>1.2.0</version>
      </dependency>    
<!--     <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>${tcnative.artifactId}</artifactId>
      <classifier>${tcnative.classifier}</classifier>
    </dependency>
    <dependency>
      <groupId>${conscrypt.groupId}</groupId>
      <artifactId>${conscrypt.artifactId}</artifactId>
      <classifier>${conscrypt.classifier}</classifier>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.npn</groupId>
      <artifactId>npn-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jzlib</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <scope>runtime</scope>
    </dependency>

    see https://github.com/netty/netty/issues/874
    <dependency>
      <groupId>com.yammer.metrics</groupId>
      <artifactId>metrics-core</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <scope>runtime</scope>
    </dependency>
    
    Needed for OCSP
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk15on</artifactId>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk15on</artifactId>
    </dependency>

    Needed on Java11 and later
    <dependency>
      <groupId>com.sun.activation</groupId>
      <artifactId>javax.activation</artifactId>
    </dependency> -->
  </dependencies>

  <build>
    <plugins>
      <!-- run-example.sh invokes this plugin to launch an example. -->
      <plugin>
        <groupId>kr.motd.maven</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <executable>${java.home}/bin/java</executable>
          <commandlineArgs>
            ${argLine.common}
            ${argLine.alpnAgent}
            -classpath %classpath
            ${argLine.leak}
            ${argLine.coverage}
            ${argLine.example}
            ${exampleClass}
          </commandlineArgs>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>

